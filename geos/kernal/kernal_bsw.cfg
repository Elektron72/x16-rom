MEMORY {
	LOKERNAL:     start = $C000, size = $0100, fill = yes, file = %O;
	KERNAL:       start = $C100, size = $3EFA, fill = yes, file = %O;
	VECTORS:      start = $FFFA, size = $0006, fill = yes, file = %O;
	VARS:         start = $86C0, size = $0940;

	RAM:          start = $9800, size = $0700;
	DRV:          start = $9000, size = $0D80;
}

SEGMENTS {
	vars:               load = VARS, type = bss;

	# kernal header: $c000
	header:             load = LOKERNAL, type = ro;

	# ...
	tobasic2:           load = LOKERNAL, type = ro;
	mainloop1:          load = LOKERNAL, type = ro;
	files2:             load = LOKERNAL, type = ro;
	memory2:            load = LOKERNAL, type = ro;

	# kernal jump table: $c100
	jumptab:            load = KERNAL, type = ro;

	# start: $5000-
	start:              load = KERNAL, type = ro;
	ramexp1:            load = KERNAL, type = ro;

	# lokernal: $9D80-$9FFF
	files1a2a:          load = KERNAL, type = ro;
	files1a2b:          load = KERNAL, type = ro;
	files1b:            load = KERNAL, type = ro;
	serial1:            load = KERNAL, type = ro;
	reu:                load = KERNAL, type = ro;
	ramexp2:            load = KERNAL, type = ro;
	tobasic1:           load = KERNAL, type = ro;

	# icons: $BF40-$BFFF
	mouseptr:           load = KERNAL, type = ro;
	dlgbox2:            load = KERNAL, type = ro;

	# kernal code
	mainloop3:          load = KERNAL, type = ro;
	bitmask1:           load = KERNAL, type = ro;
	bitmask2:           load = KERNAL, type = ro;
	bitmask3:           load = KERNAL, type = ro;
	files3:             load = KERNAL, type = ro;
	mainloop2:          load = KERNAL, type = ro;
	load1a:             load = KERNAL, type = ro;
	load1b:             load = KERNAL, type = ro;
	load1c:             load = KERNAL, type = ro;
	load1d:             load = KERNAL, type = ro;
	init1:              load = KERNAL, type = ro;
	hw1a:               load = KERNAL, type = ro;
	hw1b:               load = KERNAL, type = ro;
	graph1:             load = KERNAL, type = ro;
	hw2:                load = KERNAL, type = ro;
	init2:              load = KERNAL, type = ro;
	memory1a:           load = KERNAL, type = ro;
	memory1b:           load = KERNAL, type = ro;
	misc:               load = KERNAL, type = ro;
	hw3:                load = KERNAL, type = ro;
	load2:              load = KERNAL, type = ro;
	graph2a:            load = KERNAL, type = ro;
	graph2b:            load = KERNAL, type = ro;
	graph2c:            load = KERNAL, type = ro;
	graph2d:            load = KERNAL, type = ro;
	graph2e:            load = KERNAL, type = ro;
	graph2f:            load = KERNAL, type = ro;
	graph2g:            load = KERNAL, type = ro;
	graph2h:            load = KERNAL, type = ro;
	graph2i1:           load = KERNAL, type = ro;
	inline:             load = KERNAL, type = ro;
	graph2j:            load = KERNAL, type = ro;
	graph2k:            load = KERNAL, type = ro;
	graph2l1:           load = KERNAL, type = ro;
	graph2l2:           load = KERNAL, type = ro;
	graph2m:            load = KERNAL, type = ro;
	graph2n:            load = KERNAL, type = ro;
	graph2o:            load = KERNAL, type = ro;
	process1:           load = KERNAL, type = ro;
	process2:           load = KERNAL, type = ro;
	process3a:          load = KERNAL, type = ro;
	process3aa:         load = KERNAL, type = ro;
	process3b:          load = KERNAL, type = ro;
	process3c:          load = KERNAL, type = ro;
	sprites:            load = KERNAL, type = ro;
	math1a1:            load = KERNAL, type = ro;
	math1a2:            load = KERNAL, type = ro;
	math1b:             load = KERNAL, type = ro;
	math1c1:            load = KERNAL, type = ro;
	math1c2:            load = KERNAL, type = ro;
	math1d:             load = KERNAL, type = ro;
	mouse1:             load = KERNAL, type = ro;
	panic1:             load = KERNAL, type = ro;
	panic2:             load = KERNAL, type = ro;
	panic3:             load = KERNAL, type = ro;
	serial2:            load = KERNAL, type = ro;
	patterns:           load = KERNAL, type = ro;
	fonts1:             load = KERNAL, type = ro;
	bswfont:            load = KERNAL, type = ro;
	memory3:            load = KERNAL, type = ro;
	load3:              load = KERNAL, type = ro;
	files6a:            load = KERNAL, type = ro;
	files6b:            load = KERNAL, type = ro;
	files6c:            load = KERNAL, type = ro;
	deskacc1:           load = KERNAL, type = ro;
	load4b:             load = KERNAL, type = ro;
	deskacc2:           load = KERNAL, type = ro;
	files7:             load = KERNAL, type = ro;
	deskacc3:           load = KERNAL, type = ro;
	files8:             load = KERNAL, type = ro;
	files9:             load = KERNAL, type = ro;
	files10:            load = KERNAL, type = ro;
	init4:              load = KERNAL, type = ro;
	fonts2:             load = KERNAL, type = ro;
	fonts3:             load = KERNAL, type = ro;
	fonts4:             load = KERNAL, type = ro;
	fonts4a:            load = KERNAL, type = ro;
	fonts4b:            load = KERNAL, type = ro;
	init3:              load = KERNAL, type = ro;
	graph3a:            load = KERNAL, type = ro;
	graph3b:            load = KERNAL, type = ro;
	graph3c:            load = KERNAL, type = ro;
	conio1:             load = KERNAL, type = ro;
	conio2:             load = KERNAL, type = ro;
	conio3a:            load = KERNAL, type = ro;
	conio3b:            load = KERNAL, type = ro;
	conio4:             load = KERNAL, type = ro;
	conio5:             load = KERNAL, type = ro;
	conio6:             load = KERNAL, type = ro;
	math2:              load = KERNAL, type = ro;
	graph4:             load = KERNAL, type = ro;
	mouse2:             load = KERNAL, type = ro;
	menu1:              load = KERNAL, type = ro;
	menu2:              load = KERNAL, type = ro;
	menu3:              load = KERNAL, type = ro;
	icon1:              load = KERNAL, type = ro;
	mouse3:             load = KERNAL, type = ro;
	icon2:              load = KERNAL, type = ro;
	dlgbox1a:           load = KERNAL, type = ro;
	dlgbox1b:           load = KERNAL, type = ro;
	dlgbox1c:           load = KERNAL, type = ro;
	dlgbox1d:           load = KERNAL, type = ro;
	dlgbox1e1:          load = KERNAL, type = ro;
	dlgbox1e2:          load = KERNAL, type = ro;
	dlgbox1f:           load = KERNAL, type = ro;
	dlgbox1g:           load = KERNAL, type = ro;
	dlgbox1h:           load = KERNAL, type = ro;
	dlgbox1i:           load = KERNAL, type = ro;
	dlgbox1j:           load = KERNAL, type = ro;
	dlgbox1k:           load = KERNAL, type = ro;
	mouse4:             load = KERNAL, type = ro;
	irq:                load = KERNAL, type = ro;
	keyboard1:          load = KERNAL, type = ro;
	keyboard2:          load = KERNAL, type = ro;
	keyboard3:          load = KERNAL, type = ro;
	time1:              load = KERNAL, type = ro;
	time2:              load = KERNAL, type = ro;
	RAM:                load = KERNAL, run = RAM, type = ro, define = yes;
	drvrom:             load = KERNAL, run = DRV, type = ro, define = yes;
	entry:              load = KERNAL, type = ro;
	vectors:            load = VECTORS, type = ro;
}
