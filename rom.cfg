MEMORY {
	# BASIC
	ZPBASIC:  start = $0000, size = $0090;
	STRTMP:   start = $00FF, size = $0002;
	BVECTORS: start = $0300, size = $0013;

	# KERNAL
	ZPKERNAL: start = $0090, size = $0070;
	STACK:    start = $0100, size = $0100;
	KVAR:     start = $0200, size = $0100;
	KVECTORS: start = $0314, size = $0100;

	# ROM C000-FFFF
	ROM:     start = $C000, size = $3F80, fill=yes, fillval=$AA;

	JMPTBL:  start = $FF80, size = $007A, fill=yes, fillval=$AA;
	VECTORS: start = $FFFA, size = $0006, fill=yes, fillval=$AA;
}

SEGMENTS {
	ZPBASIC:  load = ZPBASIC,  type = zp;
	STRTMP:   load = STRTMP,   type = zp;
	BVECTORS: load = BVECTORS, type = bss;

	ZPKERNAL: load = ZPKERNAL, type = zp;
	STACK:    load = STACK,    type = bss;
	KVAR:     load = KVAR,     type = bss;
	KVECTORS: load = KVECTORS, type = bss;

	BASIC:    load = ROM,      type = ro;

	EDITOR:   load = ROM,      type = ro;
	SERIAL:   load = ROM,      type = ro;
	RS232:    load = ROM,      type = ro;
	MESSAGES: load = ROM,      type = ro;
	CHANNEL:  load = ROM,      type = ro;
	TIME:     load = ROM,      type = ro;
	ERROR:    load = ROM,      type = ro;
	INIT:     load = ROM,      type = ro;
	RS232NMI: load = ROM,      type = ro;
	IRQFILE:  load = ROM,      type = ro;
	JMPTBL:   load = JMPTBL,   type = ro;
	VECTORS:  load = VECTORS,  type = ro;
}
